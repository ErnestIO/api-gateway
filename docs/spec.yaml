swagger: '2.0'
info:
  title: Ernest API
  description: Developer driven orchestration tool
  version: 1.0.0
host: api.ernest.io
schemes:
  - https
basePath: /
produces:
  - application/json
paths:
  '/auth':
    post:
      summary: Authentication endpoint
      description: |
        Manages user authentication based on jwt tokens
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: The user to be created
          schema:
            $ref: '#/definitions/UserAuth'
      tags:
        - Authentication
      responses:
        '200':
          description: A json string containing the token to be used to log in
          schema:
            $ref: '#/definitions/Token'
        '403':
          description: You're not authorized
  '/api/users/':
    get:
      summary: List all users
      description: |
        returns all users viewable by a logged in user
      produces:
        - application/json
      tags:
        - Users
      responses:
        '200':
          description: A json array containing all available users
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        '403':
          description: You're not authorized to view this resource
    post:
      summary: Create a user
      description: |
        accepts a valid user model
        return a user model populated with an ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: The user to be created
          schema:
            $ref: '#/definitions/UserCreate'
      tags:
        - Users
      responses:
        '201':
          description: Returns the created user
          schema:
            $ref: '#/definitions/User'
        '403':
          description: You're not authorized to view this resource
  '/api/users/{user}':
    get:
      summary: Get a user
      description: |
        returns a user by id
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          description: id of user to return
          required: true
          type: string
          format: string
      tags:
        - Users
      responses:
        '200':
          description: A valid user object
          schema:
            $ref: '#/definitions/User'
        '403':
          description: You're not authorized to view this resource
    put:
      summary: Update a user
      description: |
        accepts a valid user model
        return a project model populated with an ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          description: id of user to update
          required: true
          type: string
          format: string
        - name: body
          in: body
          description: The user to be created
          schema:
            $ref: '#/definitions/UserUpdate'
      tags:
        - Users
      responses:
        '201':
          description: Returns the created user
          schema:
            $ref: '#/definitions/User'
        '403':
          description: You're not authorized to view this resource
    delete:
      summary: Delete a user
      description: |
        deletes a user
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          description: name of user to delete
          required: true
          type: string
          format: string
      tags:
        - Users
      responses:
        '202':
          description: Indicates the user has been successfully deleted
          schema:
            $ref: '#/definitions/Project'
        '403':
          description: You're not authorized to view this resource
  '/api/projects/':
    get:
      summary: List all projects
      description: |
        returns all projects viewable by a logged in user
      produces:
        - application/json
      tags:
        - Projects
      responses:
        '200':
          description: A json array containing all available projects
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
        '403':
          description: You're not authorized to view this resource
    post:
      summary: Create a project
      description: |
        accepts a valid project model
        return a project model populated with an ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: The project to be created
          schema:
            $ref: '#/definitions/Project'
      tags:
        - Projects
      responses:
        '201':
          description: Returns the created project
          schema:
            $ref: '#/definitions/Project'
        '403':
          description: You're not authorized to view this resource
  '/api/projects/{project}':
    get:
      summary: Get a project
      description: |
        Returns a project by name
      produces:
        - application/json
      parameters:
        - name: project
          in: path
          description: name of project to return
          required: true
          type: string
          format: string
      tags:
        - Projects
      responses:
        '200':
          description: A valid project object
          schema:
            $ref: '#/definitions/Project'
        '403':
          description: You're not authorized to view this resource
        '404':
          description: Resource does not exist
    put:
      summary: Update a project
      description: |
        accepts a valid project model
        return a project model populated with an ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: project
          in: path
          description: name of project to return
          required: true
          type: string
          format: string
        - name: body
          in: body
          description: The project to be created
          schema:
            $ref: '#/definitions/Project'
      tags:
        - Projects
      responses:
        '201':
          description: Returns the created project
          schema:
            $ref: '#/definitions/Project'
        '403':
          description: You're not authorized to view this resource
    delete:
      summary: Delete a project
      description: |
        deletes a project if all related environments have been removed
      produces:
        - application/json
      parameters:
        - name: project
          in: path
          description: name of project to delete
          required: true
          type: string
          format: string
      tags:
        - Projects
      responses:
        '202':
          description: Indicates the project has been successfully deleted
          schema:
            $ref: '#/definitions/Project'
        '403':
          description: You're not authorized to view this resource
  '/api/projects/{project}/environments/':
    get:
      summary: List all environments
      description: |
        returns all environments viewable by a logged in user
      produces:
        - application/json
      parameters:
        - name: project
          in: path
          description: name of project
          required: true
          type: string
          format: string
      tags:
        - Environments
      responses:
        '200':
          description: A json array containing all available environments
          schema:
            type: array
            items:
              $ref: '#/definitions/Environment'
        '403':
          description: You're not authorized to view this resource
    post:
      summary: Create a environment
      description: |
        accepts a valid environment model
        return a environment model populated with an ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: project
          in: path
          description: name of project
          required: true
          type: string
          format: string
        - name: body
          in: body
          description: The environment to be created
          schema:
            $ref: '#/definitions/Environment'
      tags:
        - Environments
      responses:
        '201':
          description: Returns the created environment
          schema:
            $ref: '#/definitions/Environment'
        '403':
          description: You're not authorized to view this resource
  '/api/projects/{project}/environments/{environment}':
    get:
      summary: Get a environment
      description: |
        Returns a environment by name
      produces:
        - application/json
      parameters:
        - name: project
          in: path
          description: name of project
          required: true
          type: string
          format: string
        - name: environment
          in: path
          description: name of environment
          required: true
          type: string
          format: string
      tags:
        - Environments
      responses:
        '200':
          description: A valid environment object
          schema:
            $ref: '#/definitions/Environment'
        '403':
          description: You're not authorized to view this resource
        '404':
          description: Resource does not exist
    put:
      summary: Update a environment
      description: |
        accepts a valid environment model
        return a environment model populated with an ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: project
          in: path
          description: name of project
          required: true
          type: string
          format: string
        - name: environment
          in: path
          description: name of environment
          required: true
          type: string
          format: string
        - name: body
          in: body
          description: The environment to be updated
          schema:
            $ref: '#/definitions/Environment'
      tags:
        - Environments
      responses:
        '201':
          description: Returns the created environment
          schema:
            $ref: '#/definitions/Environment'
        '403':
          description: You're not authorized to view this resource
    delete:
      summary: Delete a environment
      description: |
        return a build model populated with an ID
      produces:
        - application/json
      parameters:
        - name: project
          in: path
          description: name of project
          required: true
          type: string
          format: string
        - name: environment
          in: path
          description: name of environment
          required: true
          type: string
          format: string
      tags:
        - Environments
      responses:
        '202':
          description: Returns the build used to delete a environment
          schema:
            $ref: '#/definitions/Build'
        '403':
          description: You're not authorized to view this resource
  '/api/projects/{project}/environments/{environment}/builds/':
    get:
      summary: List all builds
      description: |
        returns all builds associated with a environment
      produces:
        - application/json
      parameters:
        - name: project
          in: path
          description: name of project
          required: true
          type: string
          format: string
        - name: environment
          in: path
          description: name of environment
          required: true
          type: string
          format: string
      tags:
        - Builds
      responses:
        '200':
          description: A json array containing all available environments
          schema:
            type: array
            items:
              $ref: '#/definitions/Build'
        '403':
          description: You're not authorized to view this resource
    post:
      summary: Create a build
      description: |
        accepts a environment's yaml
        return a build model populated with an ID and status
      consumes:
        - application/yaml
      produces:
        - application/json
      parameters:
        - name: project
          in: path
          description: name of project
          required: true
          type: string
          format: string
        - name: environment
          in: path
          description: name of environment
          required: true
          type: string
          format: string
      tags:
        - Builds
      responses:
        '201':
          description: Returns the created build
          schema:
            $ref: '#/definitions/Build'
        '403':
          description: You're not authorized to view this resource
  '/api/projects/{project}/environments/{environment}/builds/{build}':
    get:
      summary: Get a build
      description: |
        Returns a build by id
      produces:
        - application/json
      parameters:
        - name: project
          in: path
          description: name of project
          required: true
          type: string
          format: string
        - name: environment
          in: path
          description: name of environment
          required: true
          type: string
          format: string
        - name: build
          in: path
          description: id of build
          required: true
          type: string
          format: string
      tags:
        - Builds
      responses:
        '200':
          description: A json array containing all available environments
          schema:
            $ref: '#/definitions/Environment'
        '403':
          description: You're not authorized to view this resource
        '404':
          description: Resource does not exist
  '/api/projects/{project}/environments/{environment}/builds/{build}/definition/':
    get:
      summary: Get the definition used for a build
      description: |
        Returns a build defintion
      produces:
        - application/yaml
      parameters:
        - name: project
          in: path
          description: name of project
          required: true
          type: string
          format: string
        - name: environment
          in: path
          description: name of environment
          required: true
          type: string
          format: string
        - name: build
          in: path
          description: id of build
          required: true
          type: string
          format: string
      tags:
        - Builds
      responses:
        '200':
          description: A yaml definition
        '403':
          description: You're not authorized to view this resource
        '404':
          description: Resource does not exist
  '/api/projects/{project}/environments/{environment}/builds/{build}/mapping/':
    get:
      summary: Get the build graph/mapping
      description: |
        Returns a build graph
      produces:
        - application/json
      parameters:
        - name: project
          in: path
          description: name of project
          required: true
          type: string
          format: string
        - name: environment
          in: path
          description: name of environment
          required: true
          type: string
          format: string
        - name: build
          in: path
          description: id of build
          required: true
          type: string
          format: string
      tags:
        - Builds
      responses:
        '200':
          description: A json build graph
        '403':
          description: You're not authorized to view this resource
        '404':
          description: Resource does not exist
  '/api/projects/{project}/environments/{environment}/actions/':
    get:
      summary: List all actions
      description: |
        returns all actions associated with a environment
      produces:
        - application/json
      parameters:
        - name: project
          in: path
          description: name of project
          required: true
          type: string
          format: string
        - name: environment
          in: path
          description: name of environment
          required: true
          type: string
          format: string
      tags:
        - Actions
      responses:
        '200':
          description: |
            A json array containing all available actions associated with an environment
          schema:
            type: array
            items:
              $ref: '#/definitions/Action'
        '403':
          description: You're not authorized to view this resource
    post:
      summary: Trigger an action
      description: |
        accepts an action with valid type
        returns an action
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: project
          in: path
          description: name of project
          required: true
          type: string
          format: string
        - name: environment
          in: path
          description: name of environment
          required: true
          type: string
          format: string
        - name: body
          in: body
          description: The environment to be created
          schema:
            $ref: '#/definitions/Action'
      tags:
        - Actions
      responses:
        '201':
          description: Returns the created build
          schema:
            $ref: '#/definitions/Action'
        '403':
          description: You're not authorized to view this resource
  '/api/projects/{project}/environments/{environment}/actions/{action}':
    get:
      summary: List all actions
      description: returns an action by id
      produces:
        - application/json
      parameters:
        - name: project
          in: path
          description: name of project
          required: true
          type: string
          format: string
        - name: environment
          in: path
          description: name of environment
          required: true
          type: string
          format: string
        - name: action
          in: path
          description: id of the action
          required: true
          type: integer
          format: integer
      tags:
        - Actions
      responses:
        '200':
          description: A json array containing all available environments
          schema:
            $ref: '#/definitions/Action'
        '403':
          description: You're not authorized to view this resource
  '/api/policies/':
    get:
      summary: List all policies
      description: |
        returns all policies viewable by the logged user
      produces:
        - application/json
      tags:
        - Policies
      responses:
        '200':
          description: A json array containing all available policies
          schema:
            type: array
            items:
              $ref: '#/definitions/Policy'
        '403':
          description: You're not authorized to view this resource
        '404':
          description: Policy not found
    post:
      summary: Create a policy
      description: |
        accepts a valid policy model
        return a policy model populated with an ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: definition
          in: body
          description: The policy spec to be processed
          schema:
            $ref: '#/definitions/Policy'
      tags:
        - Policies
      responses:
        '201':
          description: Returns the created policy
          schema:
            $ref: '#/definitions/Policy'
        '403':
          description: You're not authorized to view this resource
  '/api/policies/{policy}':
    get:
      summary: Get a policy
      description: |
        Returns a policy by name
      produces:
        - application/json
      parameters:
        - name: policy
          in: path
          description: name of policy to return
          required: true
          type: string
          format: string
      tags:
        - Policies
      responses:
        '200':
          description: A valid policy object
          schema:
            $ref: '#/definitions/Policy'
        '403':
          description: You're not authorized to view this resource
        '404':
          description: Resource does not exist
    put:
      summary: Update a policy
      description: |
        accepts a valid policy model
        return a policy model populated with an ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: policy
          in: path
          description: name of the policy to update
          required: true
          type: string
          format: string
        - name: definition
          in: body
          description: The policy spec to be processed
          schema:
            $ref: '#/definitions/Policy'
      tags:
        - Policies
      responses:
        '201':
          description: Returns the created policy
          schema:
            $ref: '#/definitions/Policy'
        '403':
          description: You're not authorized to view this resource
    delete:
      summary: Delete a policy
      description: |
        deletes a policy
      produces:
        - application/json
      parameters:
        - name: policy
          in: path
          description: name of policy to delete
          required: true
          type: string
          format: string
      tags:
        - Policies
      responses:
        '202':
          description: Policy has been successfully deleted
          schema:
            $ref: '#/definitions/Policy'
        '403':
          description: You're not authorized to delete this resource
  '/api/notifications/':
    get:
      summary: List all notifications
      description: |
        returns all notifications viewable by the logged user
      produces:
        - application/json
      tags:
        - Notifications
      responses:
        '200':
          description: A json array containing all available notifications
          schema:
            type: array
            items:
              $ref: '#/definitions/Notification'
        '403':
          description: You're not authorized to view this resource
        '404':
          description: Resource not found
    post:
      summary: Create a notification
      description: |
        accepts a valid notification model
        return a policy model populated with an ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: notification
          in: body
          description: The notification type
          schema:
            $ref: '#/definitions/Notification'
      tags:
        - Notifications
      responses:
        '201':
          description: Returns the created notification
          schema:
            $ref: '#/definitions/Notification'
        '403':
          description: You're not authorized to view this resource
  '/api/notifications/{notification}':
    get:
      summary: Get a notification
      description: |
        Returns a notification by name
      produces:
        - application/json
      parameters:
        - name: notification
          in: path
          description: name of the notification to return
          required: true
          type: string
          format: string
      tags:
        - Notifications
      responses:
        '200':
          description: A valid notification object
          schema:
            $ref: '#/definitions/Notification'
        '403':
          description: You're not authorized to view this resource
        '404':
          description: Resource does not exist
    put:
      summary: Update a notificaion
      description: |
        accepts a valid notification model
        return a notificaion model populated with an ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: notification
          in: path
          description: name of the notification to return
          required: true
          type: string
          format: string
        - name: type
          in: body
          description: The notification type
          schema:
            $ref: '#/definitions/Notification'
      tags:
        - Notifications
      responses:
        '201':
          description: Returns the created notificaion
          schema:
            $ref: '#/definitions/Notification'
        '403':
          description: You're not authorized to view this resource
    delete:
      summary: Delete a notificaion
      description: |
        deletes a notification
      produces:
        - application/json
      parameters:
        - name: notification
          in: path
          description: name of notification to delete
          required: true
          type: string
          format: string
      tags:
        - Notifications
      responses:
        '202':
          description: Notification has been successfully deleted
          schema:
            $ref: '#/definitions/Notification'
        '403':
          description: You're not authorized to delete this resource
  '/api/roles/':
    get:
      summary: List all membership roles
      description: |
        returns all membership roles viewable by the logged user
      produces:
        - application/json
      tags:
        - Roles
      responses:
        '200':
          description: A json array containing all available membership roles
          schema:
            type: array
            items:
              $ref: '#/definitions/Member'
        '403':
          description: You're not authorized to view this resource
        '404':
          description: Resource not found
    post:
      summary: Create a membership roles
      description: |
        accepts a valid membership roles model
        return a membership roles model populated with an ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: membership roles
          in: body
          description: The membership roles type
          schema:
            $ref: '#/definitions/Member'
      tags:
        - Roles
      responses:
        '201':
          description: Returns the created membership roles
          schema:
            $ref: '#/definitions/Member'
        '403':
          description: You're not authorized to view this resource
  '/api/roles/{role}':
    get:
      summary: Get a role
      description: |
        Returns a membership role by name
      produces:
        - application/json
      parameters:
        - name: role
          in: path
          description: id of the membership role to return
          required: true
          type: string
          format: string
      tags:
        - Roles
      responses:
        '200':
          description: A valid membership role object
          schema:
            $ref: '#/definitions/Member'
        '403':
          description: You're not authorized to view this resource
        '404':
          description: Resource does not exist
    put:
      summary: Update a role membership
      description: |
        accepts a valid role model
        return a role model populated with an ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: role
          in: path
          description: id of the membership role to return
          required: true
          type: string
          format: string
        - name: type
          in: body
          description: The membership role type
          schema:
            $ref: '#/definitions/Member'
      tags:
        - Roles
      responses:
        '201':
          description: Returns the created notificaion
          schema:
            $ref: '#/definitions/Member'
        '403':
          description: You're not authorized to view this resource
    delete:
      summary: Delete a membership role
      description: |
        deletes a membership role
      produces:
        - application/json
      parameters:
        - name: role
          in: path
          description: id of membership role to delete
          required: true
          type: string
          format: string
      tags:
        - Roles
      responses:
        '202':
          description: Role has been successfully deleted
          schema:
            $ref: '#/definitions/Member'
        '403':
          description: You're not authorized to delete this resource

definitions:
  Token:
    type: object
    properties:
      token:
        type: string
        description: JWT Token to be used in future connections
  Member:
    type: object
    required:
      - user
      - role
    properties:
      id:
        type: integer
        readOnly: true
        description: id of the membership role
      user_id:
        type: string
        description: name of user that the membership role applies to
      resource_id:
        type: string
        description: id of the resource the membership role applies to
      resource_type:
        type: string
        description: the type of resource the membership role applies to
      role:
        type: string
        description: the type of role
        enum:
          - owner
          - reader
  User:
    type: object
    required:
      - username
    properties:
      id:
        type: integer
        description: role id
        readOnly: true
      type:
        type: string
        description: the type of user. This determines what service will handle authenticating the user
        enum:
          - local
          - federation
      username:
        type: string
        description: unique username of user
      admin:
        type: boolean
        default: false
        description: indicates if user is a system wide admin
      disabled:
        type: boolean
        default: false
        description: indicates if the user account has been disabled
      mfa:
        type: boolean
        default: false
        description: indicates if the user has multi-factor authentication enabled
      mfa_secret:
        type: string
        description: the mfa secret generated by ernest when multi-factor authentication is enabled. This is returned once, only when a user has mfa enabled
      env_memberships:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/Member'
      project_memberships:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/Member'
  UserCreate:
    allOf:
      - $ref: '#/definitions/User'
      - type: object
        required:
          - password
        properties:
          password:
            type: string
            description: valid user password
  UserUpdate:
    allOf:
      - $ref: '#/definitions/UserCreate'
      - type: object
        required:
          - old_password
        properties:
          old_password:
            type: string
            description: valid user password
  UserAuth:
    type: object
    required:
      - username
      - password
    properties:
      username:
        type: string
        description: unique username of user
      password:
        type: string
        description: valid user password
      verification_code:
        type: string
        description: the user's challenge response for multi-factor authentication. Only needed if multi-factor authentication is needed
  Project:
    type: object
    required:
      - name
      - type
    properties:
      id:
        type: integer
        description: environment id
        readOnly: true
      name:
        type: string
        description: the name of the environment
      type:
        type: string
        description: the type of environment
      credentials:
        $ref: '#/definitions/Credentials'
      members:
        type: array
        readOnly: true
        items:
            $ref: '#/definitions/Member'
  Environment:
    type: object
    required:
      - name
      - type
    properties:
      id:
        type: integer
        description: environment id
        readOnly: true
      name:
        type: string
        description: the name of the environment
      type:
        type: string
        description: the type of environment
      status:
        type: string
        description: the status of the environment
        readOnly: true
        enum:
          - initializing
          - done
          - errored
          - in_progress
          - awaiting_approval
          - awaiting_resolution
      options:
        $ref: '#/definitions/EnvironmentOptions'
      credentials:
        $ref: '#/definitions/Credentials'
      schedules:
        type: object
        additionalProperties:
          $ref: '#/definitions/EnvironmentSchedule'
      builds:
        type: array
        description: array of all associated builds
        items:
          $ref: '#/definitions/Build'
      members:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/Member'
      created_at:
        type: string
        format: date-time
        description: timestamp of environment creation
      updated_at:
        type: string
        format: date-time
        description: timestamp of environment creation
  EnvironmentOptions:
    type: object
    properties:
      submissions:
        type: boolean
        description: allow users with read only permissions to submit builds for review by an admin.
  EnvironmentSchedule:
    type: object
    required:
      - action
      - interval
    properties:
      name:
        type: string
        description: the name of the schedule
      action:
        type: string
        enum:
          - sync
          - power_on
          - power_off
      interval:
        type: string
        description: the interval at which the task will run. Must be valid cron syntax
      resolution:
        type: string
        description: When the action is sync, the action ernest will take if a sync detects changes. Specifying manual will allow an admin user to review and resolve the changes. Auto accept will automatically update ernests state to the latest detected state. Auto reject will enforce the last known state on ernest and overwrite the changes on the cloud provider.
        enum:
          - manual
          - auto-accept
          - auto-reject
      instances:
        type: array
        items:
          type: string
        description: When action is either power_on or power_off, this specifies the names of the instance groups that the scheduled action applies to.
  Build:
    type: object
    properties:
      id:
        type: string
        format: uuid
        description: the unique id of the build
        readOnly: true
      environment_id:
        type: integer
        description: the environment id associated with the build
        readOnly: true
      user_id:
        type: integer
        description: the user id of the user who created the build
        readOnly: true
      type:
        type: string
        description: the type of build
        readOnly: true
        enum:
          - apply
          - destroy
          - import
          - sync
          - submission
          - sync-rejected
          - sync-accepted
          - sync-ignored
          - submission-accepted
          - submission-rejected
      status:
        type: string
        description: the status of the build
        readOnly: true
        enum:
          - initializing
          - done
          - errored
          - in_progress
          - awaiting_approval
          - awaiting_resolution
      created_at:
        type: string
        format: date-time
        description: the start time of the build
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: the last update time of the build
        readOnly: true
  Credentials:
    type: object
    properties:
      provider_type:
        type: string
        description: type of credentials
        enum:
          - aws
          - azure
          - vcloud
      region:
        type: string
        description: region of aws or azure datacenter
      aws_secret_access_key:
        type: string
        description: aws secret access key
      aws_access_key_id:
        type: string
        description: aws secret key id
      azure_subscription_id:
        type: string
        description: azure subscription id
      azure_client_id:
        type: string
        description: azure client id
      azure_client_secret:
        type: string
        description: azure client secret
      azure_tenant_id:
        type: string
        description: azure tenant id
      azure_environment:
        type: string
        description: azure environment
      vcloud_url:
        type: string
        description: vcloud api url
      username:
        type: string
        description: vcloud api username. Must conform to 'USERNAME@ORGANISATION'
      user:
        type: string
        description: vcloud api user
      org:
        type: string
        description: vcloud api organisation
      vdc:
        type: string
        description: vcloud api target virtual datacenter
      password:
        type: string
        description: vcloud api user password
  Action:
    type: object
    required:
      - type
    properties:
      id:
        type: integer
        description: the unique id of the Action
        readOnly: true
      status:
        type: string
        description: status of the action
        readOnly: true
      type:
        type: string
        enum:
          - import
          - reset
          - sync
          - resolve
          - review
          - validate
      options:
        $ref: '#/definitions/ActionOptions'
      resource_id:
        type: string
        description: the id of the created/modified resource
        readOnly: true
      resource_type:
        type: string
        description: the type of resource created/modified
        readOnly: true
      error:
        type: string
        description: status of the action
        readOnly: true
  ActionOptions:
    type: object
    properties:
      filters:
        type: array
        items:
          type: string
        description: |
          For when action type is 'import' -  values that limit the scope of the
          import
      build_id:
        type: string
        description: |
          For when action type is 'reapply' or 'clone' - the build id of the
          state you wish to return a environment to
      environment:
        type: string
        description: |
          For when action type is 'sync' - the name of the environment you wish
          to clone
      resolution:
        type: string
        description: |
          Specifies the resolution when an environment has been synced
  Policy:
    type: object
    required:
      - name
      - definition
    properties:
      id:
        type: integer
        description: policy id
        readOnly: true
      name:
        type: string
        description: the name of the policy
      description:
        type: string
        description: the spec to be processed
      environments:
        type: array
        items:
          type: string
        description: environments associated to the current policy
  Notification:
    type: object
    required:
      - name
      - type
      - config
      - sources
    properties:
      id:
        type: integer
        description: notification id
        readOnly: true
      name:
        type: string
        description: the name of the notification
      type:
        type: string
        description: the type of notification
      config:
        type: string
        description: the config required by the notification
      sources:
        type: array
        items:
          type: string
        description: Projects and environments associated with current notification
